/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.35.3.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */

import { Binary, Decimal, Empty, Expiration, Timestamp } from './common'

export interface AllNftInfoResponse {
  access: OwnerOfResponse
  info: NftInfoResponseForEmpty
}
export interface OwnerOfResponse {
  approvals: Approval[]
  owner: string
}
export interface Approval {
  expires: Expiration
  spender: string
}
export interface NftInfoResponseForEmpty {
  extension: Empty
  token_uri?: string | null
}
export interface AllOperatorsResponse {
  operators: Approval[]
}
export interface AllTokensResponse {
  tokens: string[]
}
export interface ApprovalResponse {
  approval: Approval
}
export interface ApprovalsResponse {
  approvals: Approval[]
}
export interface CollectionInfoResponse {
  creator: string
  description: string
  explicit_content?: boolean | null
  external_link?: string | null
  image: string
  royalty_info?: RoyaltyInfoResponse | null
  start_trading_time?: Timestamp | null
}
export interface RoyaltyInfoResponse {
  payment_address: string
  share: Decimal
}
export interface ContractInfoResponse {
  name: string
  symbol: string
}
export type ExecuteMsgForEmptyAndEmpty =
  | 'freeze_collection_info'
  | {
      transfer_nft: {
        recipient: string
        token_id: string
      }
    }
  | {
      send_nft: {
        contract: string
        msg: Binary
        token_id: string
      }
    }
  | {
      approve: {
        expires?: Expiration | null
        spender: string
        token_id: string
      }
    }
  | {
      revoke: {
        spender: string
        token_id: string
      }
    }
  | {
      approve_all: {
        expires?: Expiration | null
        operator: string
      }
    }
  | {
      revoke_all: {
        operator: string
      }
    }
  | {
      mint: {
        extension: Empty
        owner: string
        token_id: string
        token_uri?: string | null
      }
    }
  | {
      burn: {
        token_id: string
      }
    }
  | {
      extension: {
        msg: Empty
      }
    }
  | {
      update_collection_info: {
        collection_info: UpdateCollectionInfoMsgForRoyaltyInfoResponse
      }
    }
  | {
      update_start_trading_time: Timestamp | null
    }
  | {
      update_ownership: Action
    }
export type Action =
  | {
      transfer_ownership: {
        expiry?: Expiration | null
        new_owner: string
      }
    }
  | 'accept_ownership'
  | 'renounce_ownership'
export interface UpdateCollectionInfoMsgForRoyaltyInfoResponse {
  description?: string | null
  explicit_content?: boolean | null
  external_link?: string | null
  image?: string | null
  royalty_info?: (RoyaltyInfoResponse | null) | null
}
export interface InstantiateMsg {
  collection_info: CollectionInfoForRoyaltyInfoResponse
  minter: string
  name: string
  symbol: string
}
export interface CollectionInfoForRoyaltyInfoResponse {
  creator: string
  description: string
  explicit_content?: boolean | null
  external_link?: string | null
  image: string
  royalty_info?: RoyaltyInfoResponse | null
  start_trading_time?: Timestamp | null
}
export interface MinterResponse {
  minter: string
}
export interface NftInfoResponse {
  extension?: Empty | null
  token_uri?: string | null
}
export interface NumTokensResponse {
  count: number
}
export interface OperatorsResponse {
  operators: Approval[]
}
export type QueryMsg =
  | {
      owner_of: {
        include_expired?: boolean | null
        token_id: string
      }
    }
  | {
      approval: {
        include_expired?: boolean | null
        spender: string
        token_id: string
      }
    }
  | {
      approvals: {
        include_expired?: boolean | null
        token_id: string
      }
    }
  | {
      all_operators: {
        include_expired?: boolean | null
        limit?: number | null
        owner: string
        start_after?: string | null
      }
    }
  | {
      num_tokens: {}
    }
  | {
      contract_info: {}
    }
  | {
      nft_info: {
        token_id: string
      }
    }
  | {
      all_nft_info: {
        include_expired?: boolean | null
        token_id: string
      }
    }
  | {
      tokens: {
        limit?: number | null
        owner: string
        start_after?: string | null
      }
    }
  | {
      all_tokens: {
        limit?: number | null
        start_after?: string | null
      }
    }
  | {
      minter: {}
    }
  | {
      collection_info: {}
    }
  | {
      ownership: {}
    }
export interface TokensResponse {
  tokens: string[]
}
