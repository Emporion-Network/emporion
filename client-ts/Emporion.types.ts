/**
* This file was automatically generated by @cosmwasm/ts-codegen@1.11.1.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Uint128 = string;
export type AssetInfoBaseForString = {
  native: string;
} | {
  cw20: string;
};
export type AssetListBaseForString = AssetBaseForString[];
export type Duration = {
  height: number;
} | {
  time: number;
};
export interface InstantiateMsg {
  admin: string;
  fee: [number, number];
  fee_distribution: Distribution;
  investment_distribution: Distribution;
  max_contract_risk_share: [number, number];
  publication_fee: AssetListBaseForString;
  publication_fee_distribution: Distribution;
  reward_rate: Duration;
  unbounding_duration: Duration;
  weighted_accepted_assets: [AssetInfoBaseForString, number][];
}
export interface Distribution {
  to_claim_reserve: [number, number];
  to_dev: [number, number];
  to_investors: [number, number];
}
export interface AssetBaseForString {
  amount: Uint128;
  info: AssetInfoBaseForString;
}
export type ExecuteMsg = {
  blacklist: string[];
} | {
  unblacklist: string[];
} | {
  invest: {};
} | {
  divest: {
    to_divest: AssetListBaseForString;
  };
} | {
  withdraw: {};
} | {
  create_order: CreateOrderExecuteMsg;
} | {
  accept_order: {
    order_id: number;
  };
} | {
  finalize_order: {
    order_id: number;
  };
} | {
  add_products_to_order: {
    cart: [number, AssetInfoBaseForString][];
    order_id: number;
  };
} | {
  reject_order: {
    order_id: number;
  };
} | {
  fulfill_order: {
    order_id: number;
  };
} | {
  dispute_order: {
    order_id: number;
  };
} | {
  review_user: ReviewUserExecuteMsg;
} | {
  review_product: ReviewProductExecuteMsg;
} | {
  create_product: CreateProductExecuteMessage;
} | {
  list_product: {
    product_id: number;
  };
} | {
  un_list_product: {
    product_id: number;
  };
} | {
  receive: Cw20ReceiveMsg;
} | {
  distribute_rewards: {};
} | {
  withdraw_to_dev: {
    amount: AssetListBaseForString;
    to: string;
  };
};
export type Binary = string;
export interface CreateOrderExecuteMsg {
  buyer_risk_share: [number, number];
  cart: [number, AssetInfoBaseForString][];
  ready: boolean;
  seller: string;
}
export interface ReviewUserExecuteMsg {
  message: string;
  order_id: number;
  rating: number;
}
export interface ReviewProductExecuteMsg {
  message: string;
  order_id: number;
  product_id: number;
  rating: number;
}
export interface CreateProductExecuteMessage {
  delivery_time: Duration;
  is_listed: boolean;
  meta: string;
  price: AssetListBaseForString;
}
export interface Cw20ReceiveMsg {
  amount: Uint128;
  msg: Binary;
  sender: string;
}
export type QueryMsg = {
  info: {};
} | {
  total_power_at_height: {
    height?: number | null;
  };
} | {
  params: {};
} | {
  bank: {};
} | {
  voting_power_at_height: {
    address: string;
    height?: number | null;
  };
} | {
  user_stats: {
    addr: string;
  };
} | {
  orders_from_buyer: {
    addr: string;
    start_from?: number | null;
  };
} | {
  order: {
    order_id: number;
  };
} | {
  orders_for_seller: {
    addr: string;
    start_from?: number | null;
  };
} | {
  reviews_of_product: {
    product_id: number;
    start_from?: number | null;
  };
} | {
  reviews_of_reviewed: {
    addr: string;
    start_from?: number | null;
  };
} | {
  reviews_from_reviewer: {
    addr: string;
    start_from?: number | null;
  };
} | {
  products_of_seller: {
    addr: string;
    start_from?: number | null;
  };
} | {
  product_all: {
    start_from?: number | null;
  };
} | {
  product_by_id: {
    product_id: number;
  };
};
export interface MigrateMsg {}
export type AssetInfoBaseForAddr = {
  native: string;
} | {
  cw20: Addr;
};
export type Addr = string;
export type AssetListBaseForAddr = AssetBaseForAddr[];
export interface Bank {
  to_claim_reserve: AssetListBaseForAddr;
  to_dev: AssetListBaseForAddr;
  to_investors: AssetListBaseForAddr;
  total_invested: AssetListBaseForAddr;
}
export interface AssetBaseForAddr {
  amount: Uint128;
  info: AssetInfoBaseForAddr;
}
export interface InfoResponse {
  info: ContractVersion;
}
export interface ContractVersion {
  contract: string;
  version: string;
}
export type Expiration = {
  at_height: number;
} | {
  at_time: Timestamp;
} | {
  never: {};
};
export type Timestamp = Uint64;
export type Uint64 = string;
export type OrderStatus = "creating" | "pending" | "accepted" | "rejected" | "fulfilled" | "disputed";
export interface Order {
  buyer: Addr;
  buyer_risk_share: [number, number];
  cart: AssetListBaseForAddr;
  expected_delivery: Expiration;
  id: number;
  products: number[];
  seller: Addr;
  status: OrderStatus;
}
export type TupleOfArrayOfOrderAndNullableUint64 = [Order[], number | null];
export interface ContractParams {
  admin: Addr;
  fee: [number, number];
  fee_distribution: Distribution;
  investment_distribution: Distribution;
  max_contract_risk_share: [number, number];
  publication_fee: AssetListBaseForAddr;
  publication_fee_distribution: Distribution;
  reward_rate: Duration;
  unbounding_duration: Duration;
  weighted_accepted_assets: [AssetInfoBaseForAddr, number][];
}
export type TupleOfArrayOfProductAndNullableUint64 = [Product[], number | null];
export interface Product {
  delivery_time: Duration;
  id: number;
  is_listed: boolean;
  meta: string;
  price: AssetListBaseForAddr;
  rating: [number, number];
  seller: Addr;
}
export type TupleOfArrayOfReviewAndNullableUint64 = [Review[], number | null];
export type ReviewOf = {
  user: Addr;
} | {
  product: number;
};
export interface Review {
  from: Addr;
  id: number;
  message: string;
  of: ReviewOf;
  rating: number;
}
export interface TotalPowerAtHeightResponse {
  height: number;
  power: Uint128;
}
export interface User {
  addr: Addr;
  generated_fees: AssetListBaseForAddr;
  invested: AssetListBaseForAddr;
  nb_disputed_orders: number;
  nb_fulfilled_orders: number;
  nb_orders: number;
  nb_rejected_orders: number;
  rating: [number, number];
  unbonding: [AssetBaseForAddr, Expiration][];
}
export interface VotingPowerAtHeightResponse {
  height: number;
  power: Uint128;
}